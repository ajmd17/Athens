module events_example {
  type Player {
    id: Int
    username: String
    position = [0, 0] // x, y

    on 'save': (fs: FileStream) => (self) {
      fs => self.x
      fs => self.y
      fs => self.id
    }

    on 'player move': (x: Number, y: Number) => (self) {
      self.position = [x, y]
    }

    /* handle values */
    on 5 => (self) { // gets chosen before next

    }

    /* handle any of this type */
    on i: Int => (self) {

    }
  }

  my_player = new Player
  my_player.id = 9999
  my_player.username = 'asdfghjk'
  my_player.position = [10, 25]

  // throw an event into my_player object
  //@Move => my_player
  'player move' => my_player
  

  print new FilePath(pathname: '/home/test.txt')
    => new FileStream
    => @Save
    => my_player

  // implemented as a queue
  // filepath goes into FileStream
  // filestream object goes into 'save' command's queue,
  // the 'save' command's queue gets passed into my_player as params
}